The topology of lab1:
	
	    10.1.1.0         10.1.2.0
	n1 ----------- n0 ------------ n2
	               |
	    10.1.3.0   |
	n3 ------------

@[build topology@]
NodeContainer nodes;
nodes.Create (4);
stack.Install (nodes);

NodeContainer net1 (nodes.Get (0), nodes.Get (1));
NodeContainer net2 (nodes.Get (0), nodes.Get (2));
NodeContainer net3 (nodes.Get (0), nodes.Get (3));

NetDeviceContainer net1Devices = pointToPoint.Install (net1);
NetDeviceContainer net2Devices = pointToPoint.Install (net2);
NetDeviceContainer net3Devices = pointToPoint.Install (net3);

Ipv4InterfaceContainer net1Int;
address.SetBase ("10.1.1.0", "255.255.255.0");
net1Int = address.Assign (net1Devices);

Ipv4InterfaceContainer net2Int;
address.SetBase ("10.1.2.0", "255.255.255.0");
net2Int = address.Assign (net2Devices);

Ipv4InterfaceContainer net3Int;
address.SetBase ("10.1.3.0", "255.255.255.0");
net3Int = address.Assign (net3Devices);

Ipv4GlobalRoutingHelper::PopulateRoutingTables ();
@

@[add events@]
ApplicationContainer apps;

uint16_t port = 9;
OnOffHelper onoff ("ns3::UdpSocketFactory", Address (InetSocketAddress (net3Int.GetAddress (1), port)));
apps = onoff.Install (nodes.Get (1));
apps.Start (Seconds (4.0));
apps.Stop (Seconds (7.0));

PacketSinkHelper sinkUdp ("ns3::UdpSocketFactory", Address (InetSocketAddress (Ipv4Address::GetAny (), port)));
apps = sinkUdp.Install (nodes.Get (3));
apps.Start (Seconds (0.0));
apps.Stop (Seconds (10.0));

BulkSendHelper bulkSend ("ns3::TcpSocketFactory", Address (InetSocketAddress (net3Int.GetAddress (1), port)));
apps = bulkSend.Install (nodes.Get (2));
apps.Start (Seconds (1.0));
apps.Stop (Seconds (9.0));

PacketSinkHelper sinkTcp ("ns3::TcpSocketFactory", Address (InetSocketAddress (Ipv4Address::GetAny (), port)));
apps = sinkTcp.Install (nodes.Get (3));
apps.Start (Seconds (0.0));
apps.Stop (Seconds (10.0));

Simulator::Stop (Seconds (11.0));
@

@[configure tracing@]
AsciiTraceHelper ascii;
pointToPoint.EnableAsciiAll (ascii.CreateFileStream ("lab1.tr"));
@


